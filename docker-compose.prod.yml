version: '3'
services:
  # Service HAProxy pour le routage
  haproxy_image:
    build: 
        context: ./  # Chemin vers les fichiers de configuration HAProxy
    ports:
      - "80:80"  # Associe le port 80 de l'hôte au port 80 du conteneur HAProxy
    networks:
      - public_net  # Utilise le réseau public pour HAProxy

  # Service MongoDB pour la base de données
  mongodb:
    image: mongo  # Utilise l'image officielle MongoDB depuis Docker Hub
    ports:
      - "27017:27017"  # Associe le port 27017 de l'hôte au port 27017 du conteneur MongoDB
    volumes:
      - ${VOLUME_DB}:/data/db  # Monte un volume pour stocker les données MongoDB
    networks:
      - public_net  # Utilise le réseau public pour MongoDB

 # Service Backend (Node.js)
  backend:
    build:
      context: ./back-end-express-server  # Chemin vers le code source du backend
    env_file:
      - .env  # Inclut les variables d'environnement à partir du fichier .env
    ports:
      - "3000:3000"  # Associe le port 3000 de l'hôte au port 3000 du conteneur backend
    depends_on:
      - mongodb  # Dépend du service MongoDB
    volumes:
      - ${VOLUME_PATH}:/usr/src/app  # Monte le volume pour le code source backend
    networks:
      - public_net  # Utilise le réseau public pour le backend

  # Service Frontend (Angular)
  frontend:
    build:
      context: ./front-end-angular  # Chemin vers le code source du frontend
    ports:
      - "4200:80"  # Associe le port 4200 de l'hôte au port 80 du conteneur frontend
    depends_on:
      - backend  # Dépend du service Backend
    networks:
      - public_net  # Utilise le réseau public pour le frontend

  # Service Elasticsearch (pour les logs par exemple)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0  # Utilise l'image Elasticsearch officielle
    environment:
      - discovery.type=single-node  # Configuration Elasticsearch en mode nœud unique
    ports:
      - "9200:9200"  # Associe le port 9200 de l'hôte au port 9200 du conteneur Elasticsearch
    networks:
      - public_net  # Utilise le réseau public pour Elasticsearch

# Configuration du réseau public pour tous les services
networks:
  public_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"  # Sous-réseau public pour tous les services

volumes:
  mongodb_data:
    # Volume pour stocker les données MongoDB
